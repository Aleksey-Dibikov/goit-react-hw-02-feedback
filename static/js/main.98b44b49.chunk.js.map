{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","this","props","options","onLeaveFeedback","map","option","onClick","className","s","button","Component","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","statisticList","Notification","message","App","state","handleIncrement","setState","prevState","Object","values","reduce","acc","value","countTotalFeedback","percentage","Math","round","stateName","keys","percent","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,cAAgB,oC,+LCG5BC,E,4JACF,WACI,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACI,8BACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBAAqBC,QAAS,kBAAMH,EAAgBE,IAASE,UAAWC,IAAEC,OAA1E,SACCJ,GADYA,Y,GANHK,aAkBfX,IClBTY,E,4JACF,WACI,MAA0BX,KAAKC,MAAxBW,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SACd,OACI,oCACI,6BAAKD,IACJC,S,GANKH,aAePC,I,iBCfTG,E,4JACF,WACI,MAAoDd,KAAKC,MAAlDc,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,QAAQC,EAApB,EAAoBA,IAAIC,EAAxB,EAAwBA,MAAMC,EAA9B,EAA8BA,mBAC9B,OACI,qBAAIZ,UAAWC,IAAEY,cAAjB,UACI,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,c,GATST,aAqBVI,ICtBTO,E,4JACF,WACI,IAAQC,EAAYtB,KAAKC,MAAjBqB,QACR,OAAO,4BAAIA,Q,GAHQZ,aASZW,ICLTE,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,gBAAkB,SAACpB,GACjB,EAAKqB,UAAS,SAAAC,GACZ,OAAO,eAAGtB,EAASsB,EAAUtB,GAAU,O,wDAIzC,WAEA,OADmBuB,OAAOC,OAAO7B,KAAKwB,OACpBM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,O,6CAGjD,WACE,IAAMA,EAAQhC,KAAKiC,qBACbC,EAAaC,KAAKC,MAAOpC,KAAKwB,MAAMT,KAAOiB,EAAS,KAE1D,OAAKE,GAAmB,I,oBAI1B,WACE,IAAMG,EAAYT,OAAOU,KAAKtC,KAAKwB,OACnC,EAA+BxB,KAAKwB,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBe,EAAQhC,KAAKiC,qBACbM,EAAUvC,KAAKwC,kCAErB,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASmC,EACTlC,gBAAiBH,KAAKyB,oBAG1B,cAAC,EAAD,CAASb,MAAM,aAAf,SACa,IAAVoB,EACI,cAAC,EAAD,CAAcV,QAAQ,sBACtB,cAAC,EAAD,CACGP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,mBAAoBoB,a,GAhDpB7B,aAyDHa,IC3DfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BhD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.98b44b49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__1pXIP\"};","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\nimport s from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nclass FeedbackOptions extends Component {\r\n    render() {\r\n        const { options, onLeaveFeedback } = this.props;\r\n        return (\r\n            <div>\r\n                {options.map(option => (\r\n                    <button key={option} onClick={() => onLeaveFeedback(option)} className={s.button}>\r\n                    {option}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    onLeaveFeedback: PropTypes.func,\r\n}\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\n// import s from '../Section/Section.module.css';\r\n\r\nclass Section extends Component {\r\n    render() {\r\n        const {title, children} = this.props;\r\n        return (\r\n            <section>\r\n                <h2>{title}</h2>\r\n                {children}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children:PropTypes.node\r\n}\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\nimport s from '../Statistics/Statistics.module.css';\r\n\r\nclass Statistics extends Component {\r\n    render() {\r\n        const {good,neutral,bad,total,positivePercentage} = this.props;\r\n        return (\r\n            <ul className={s.statisticList}>\r\n                <li>Good: {good}</li>\r\n                <li>Neutral: {neutral}</li>\r\n                <li>Bad: {bad}</li>\r\n                <li>Total: {total}</li>\r\n                <li>Positive feedback: {positivePercentage}%</li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage:PropTypes.number\r\n}\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\n\r\nclass Notification extends Component{\r\n    render() {\r\n        const { message } = this.props;\r\n        return <p>{message}</p>;\r\n    }\r\n}\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\nexport default Notification;","import { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics'\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  handleIncrement = (option) => {\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n    countTotalFeedback() {\n    const totalValue = Object.values(this.state);\n    return totalValue.reduce((acc, value) => acc + value);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const value = this.countTotalFeedback();\n    const percentage = Math.round((this.state.good / value) * 100);\n\n    if (!percentage) return 0;\n    return percentage;\n  }\n  \n  render() {\n    const stateName = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const value = this.countTotalFeedback();\n    const percent = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title='Please leave feedback'>\n          <FeedbackOptions\n            options={stateName}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {value === 0\n            ? (<Notification message=\"No feedback given\" />)\n            : (<Statistics\n                  good={good}\n                  neutral={neutral}\n                  bad={bad}\n                  total={value}\n                  positivePercentage={percent}\n                />\n            )}\n        </Section>\n      </div>);\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1oI1x\"};"],"sourceRoot":""}